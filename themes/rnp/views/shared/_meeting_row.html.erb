<%# Params passed to render partial %>
<% [user, room, meeting, recording] %>

<tr class="meeting-row d-flex row tr-row rec-<%= recording.present? %>">
  <%# Meeting name and description %>
  <td class="col-10 col-md-3 td-titles" data-search-field="1">
    <% meeting_name = meeting[:meetingName] ? meeting[:meetingName] : recording[:metadata][:name] %>
    <div class="item-title word-break" title="<%= meeting_name %>">
      <%= meeting_name.truncate(50) %>
    </div>
    <% if recording.present? %>
      <div class="item-description" data-search-field="1">
        <% meeting_description = recording[:metadata][:'bbb-recording-description'] ? recording[:metadata][:'bbb-recording-description'] : nil %>
        <div id='recording-description-text' class="word-break" title="<%= meeting_description %>">
          <%= meeting_description&.truncate(100) %>
        </div>
      </div>
    <% end %>
  </td>

  <%# Meeting creation date %>
  <td class="col-5 col-md-2">
    <div class="meeting-info me-auto me-md-0">
      <%= format_date(meeting[:startTime].to_i, :day_month_year, false) %>

      <% scheduled_meeting_id = meeting[:metadata][:'bbb-meeting-db-id'] %>
      <% if recurring_meeting?(scheduled_meeting_id)%>
        <span class="badge badge-recurring-meeting d-none d-md-flex">
          <span>
            <%= t("default.scheduled_meeting.repeat_options.#{meeting_recurrence(scheduled_meeting_id)}") %>
          </span>
        </span>
      <% end %>
    </div>
  </td>

  <%# Meeting creation time %>
  <td class="col-3 col-md-1">
    <div class="meeting-info">
      <%= format_time(meeting[:startTime].to_i) %>
    </div>
  </td>

  <%# Meeting duration %>
  <td class="col-4 col-md-1 text-center">
    <div class="meeting-info ms-auto ms-md-0">
      <% duration = meeting[:endTime].to_i/1000 - meeting[:startTime].to_i/1000 %>
      <% if duration/60 > 0 %>
        <%= duration_in_hours_and_minutes(duration, true).capitalize %>
      <% else %>
        <%= t("meetings.duration.less_than_a_minute") %>
      <% end %>
    </div>
  </td>

  <%# Meeting expiration date %>
  <% if recording.present? && recording[:expirationDate].present? %>
    <td class="col-12 col-md-2">
      <div class="me-auto me-md-0 meeting-expire">
        <span class="d-md-none">
          <%= icon_info_circle(class: 'color-error') %>
        </span>
        <span class="d-md-none">
          <%= t("meetings.recording.exp_date") %>
        </span>
        <%= format_date(recording[:expirationDate].to_i, :day_month_year, false) %>
      </div>
    </td>
  <% else %>
    <td class="col-12 col-md-2">
    </td>
  <% end %>

  <% scheduled_meeting_id = meeting[:metadata][:'bbb-meeting-db-id'] %>
  <td class="col-5 d-flex d-md-none">
    <% if recurring_meeting?(scheduled_meeting_id)%>
      <div class="me-auto">
        <span class="badge badge-recurring-meeting">
          <span>
            <%= t("default.scheduled_meeting.repeat_options.#{meeting_recurrence(scheduled_meeting_id)}") %>
          </span>
        </span>
      </div>
    <% end %>
  </td>

  <%# Meeting with recording %>
  <% if recording.present? %>
    <%# Recording visibility %>
    <td class="<%= recording[:published] ? 'col-2' : 'col-12' %> col-md-1">
      <% if recording[:published] %>
        <%= icon_visibility(title: t("meetings.recording.published"), class: 'color-primary fa-2x') %>
      <% else %>
        <%= icon_visibility_off(title: t("meetings.recording.unpublished"), class: 'color-gray-04 fa-2x') %>
      <% end %>
    </td>

    <%# Recording state/action icons %>
    <td class="col-5 col-md-1 justify-content-start justify-content-md-center flex-row-reverse icon-container">
      <% if recording[:state] != 'processing' %>
        <% if recording[:published] %>
          <% if can_download_recording?(user, room)%>
            <% recording[:playbacks].each do |p| %>
              <% url = playback_url(room, recording[:recordID], p) %>
              <% if p[:type] == 'presentation' %>
                <%= link_to icon_conference_play(title: t("meetings.recording.playbacks.#{p[:type]}"), class: 'fa-2x'), url, class: 'd-flex text-decoration-none color-primary', target: "_blank" %>
              <% else %>
                <%= link_to icon_file_download(title: t("meetings.recording.playbacks.#{p[:type]}"), class: 'fa-2x'), url, class: 'd-flex text-decoration-none me-2 color-primary', target: "_blank" %>
              <% end %>
            <% end %>
          <% else %>
            <% url = playback_url(room, recording[:recordID], recording[:playbacks].find { |p| p[:type] == 'presentation' }) %>
            <%= link_to icon_conference_play(title: t("meetings.recording.playbacks.presentation"), class: 'fa-2x'), url, class: 'd-flex text-decoration-none', target: "_blank" %>
          <% end %>
        <% end %>
      <% else %>
        <%= icon_recording_load(title: t("meetings.recording.processing"), class: 'color-primary fa-2x') %>
      <% end %>
    </td>

    <%# Options dropdown %>
    <td class="col-2 col-md-1 td-dropdown-opts">
      <% if recording[:state] != 'processing' && recording[:published] || can_edit?(user, room) %>
        <div class="dropdown dropdown-opts">
          <a href="#" class="dropdown-toggle d-flex text-decoration-none dropdown-opts-link"
            meeting-id="<%= meeting[:meetingID] %>"
            internal-meeting-id="<%= meeting[:internalMeetingID] %>"
            check-bucket-files-endpoint="<%= room_scheduled_meeting_internal_check_bucket_files_path(@room, meeting[:meetingID], meeting[:internalMeetingID]) %>"
            data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <%= icon_options_dots %>
          </a>
          <div class="dropdown-menu dropdown-menu-right dropdown-items" aria-labelledby="dropdown-opts-<%= meeting[:internalMeetingID] %>">

            <%# Copy playback link %>
            <% if recording[:published] %>
              <% playback = recording[:playbacks].find { |p| p[:type] == 'presentation' } %>
              <% if playback.present? %>
                <%=
                link_to '#',
                data: {
                  'clipboard-text': playback_url(room, recording[:recordID], playback),
                  turbolinks: false,
                  'toast-id': '#playback-link-copied-toast'
                },
                class: "dropdown-item copy-to-clipboard" do
                %>
                  <%= icon_content_copy %>
                  <%= t('meetings.recording.playback_link') %>
                <% end %>
              <% end %>
            <% end %>

            <% if can_edit?(user, room) %>
              <div class="dropdown-divider"></div>
              <% if user.moderator?(Abilities.moderator_roles) && Rails.application.config.eduplay_enabled %>
                <% eduplay_token = EduplayToken.find_by(user_uid: user.uid)%>
                <% eduplay_uploads = EduplayUpload.recording_uploads(recording[:recordID]) if recording.present? %>
                <% latest_upload = eduplay_uploads.max_by(&:created_at)%>
                <% if eduplay_uploads.count == 0%>
                  <% if eduplay_token.present? && eduplay_token.expires_at > Time.now + 30.minutes %>
                    <%= link_to eduplay_path(room, record_id: recording[:recordID]),
                    method: :post,
                    class: "dropdown-item rec-edit" do %>
                      <%= icon_eduplay %>
                      <%= t("meetings.recording.eduplay") %>
                    <% end %>
                  <% else %>
                    <%= link_to '#',
                    'data-url': Eduplay::API.authorize_path(recording[:recordID]),
                    class: "eduplay-login dropdown-item rec-edit" do %>
                      <%= icon_eduplay %>
                      <%= t("meetings.recording.eduplay") %>
                    <% end %>
                  <% end %>
                <% else %>
                  <% if latest_upload.created_at <= 2.minutes.ago%>
                    <% if eduplay_token.present? && eduplay_token.expires_at > Time.now + 30.minutes %>
                      <%= link_to eduplay_path(room, record_id: recording[:recordID]),
                      method: :post,
                      class: "dropdown-item rec-edit" do %>
                        <%= icon_eduplay %>
                        <%= t("meetings.recording.eduplay") %>
                      <% end %>
                    <% else %>
                      <%= link_to '#',
                      'data-url': Eduplay::API.authorize_path(recording[:recordID]),
                      class: "eduplay-login dropdown-item rec-edit" do %>
                        <%= icon_eduplay %>
                        <%= t("meetings.recording.eduplay") %>
                      <% end %>
                    <% end %>
                  <% else %>
                    <%# Disable eduplay button %>
                    <span class="dropdown-item rec-edit disabled"><%= t('meetings.recording.recently_uploaded') %></span>
                  <% end %>
                <% end %>
              <% end %>
              <%# Filesender %>
              <% if user.moderator?(Abilities.moderator_roles) && Rails.application.config.filesender_enabled %>
                <% filesender_token = FilesenderToken.find_by(user_uid: user.uid)%>
                <% if filesender_token.present? && filesender_token.expires_at > Time.now + 30.minutes %>
                  <%= link_to filesender_path(room, record_id: recording[:recordID]),
                  method: :get,
                  class:"dropdown-item" do %>
                    <%= icon_filesender %>
                    <%= t("meetings.recording.filesender.share_via_filesender") %>
                  <% end %>
                <% else %>
                  <%= link_to '#',
                  'data-url': Filesender::API.authorize_path(recording[:recordID]),
                  class: "filesender-login dropdown-item rec-edit" do %>
                    <%= icon_filesender %>
                    <%= t("meetings.recording.filesender.share_via_filesender") %>
                  <% end %>
                <% end %>
              <% end %>
              <%# Unpublish recording %>
              <% if recording[:published] %>
                <%= link_to recording_unpublish_path(room, record_id: recording[:recordID]),
                method: :post,
                data: { confirm: t('meetings.recording.confirm.unpublish') },
                class: "dropdown-item rec-edit" do %>
                  <%= icon_hide_recording %>
                  <%= t("meetings.recording.unpublish")%>
                <% end %>
              <%# Publish recording %>
              <% else %>
                <%= link_to recording_publish_path(room, record_id: recording[:recordID]),
                method: :post,
                data: { confirm: t('meetings.recording.confirm.publish') },
                class: "dropdown-item rec-edit" do %>
                  <%= icon_show_recording %>
                  <%= t("meetings.recording.publish") %>
                <% end %>
              <% end %>
              <%# Delete recording %>
              <%= link_to recording_delete_path(room, record_id: recording[:recordID]),
              method: :post,
              data: { confirm: t('meetings.recording.confirm.destroy') },
              class: "dropdown-item rec-edit" do %>
                <%= icon_delete %>
                <%= t("meetings.recording.destroy") %>
              <% end %>

              <%# Download notes and participants, access learning dashboard %>
              <div class="dropdown-divider"></div>
              <div class="dropdown-item-loading">
                <%= render "shared/placeholder-loading", text: t('meetings.meeting_data_download.download_notes') %>
                <%= render "shared/placeholder-loading", text: t('meetings.meeting_data_download.download_participants') %>
                <%= render "shared/placeholder-loading", text: t('meetings.meeting_data_download.dashboard') %>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </td>

  <%# Meeting without recording, leave 'Status' and 'Recording' columns empty %>
  <% else %>
    <td class="col-md-1"></td>
    <td class="col-md-1"></td>
    <%# Options dropdown %>
    <td class="col-2 col-md-1 td-dropdown-opts">
      <% if can_edit?(user, room) %>
        <div class="dropdown dropdown-opts">
          <a href="#" class="dropdown-toggle d-flex text-decoration-none dropdown-opts-link"
            meeting-id="<%= meeting[:meetingID] %>"
            internal-meeting-id="<%= meeting[:internalMeetingID] %>"
            check-bucket-files-endpoint="<%= room_scheduled_meeting_internal_check_bucket_files_path(@room, meeting[:meetingID], meeting[:internalMeetingID]) %>"
            data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <%= icon_options_dots %>
          </a>
          <div class="dropdown-menu dropdown-menu-right dropdown-items" aria-labelledby="dropdown-opts-<%= meeting[:internalMeetingID] %>">
            <div class="dropdown-item-loading">
              <%= render "shared/placeholder-loading", text: t('meetings.meeting_data_download.download_notes') %>
              <%= render "shared/placeholder-loading", text: t('meetings.meeting_data_download.download_participants') %>
              <%= render "shared/placeholder-loading", text: t('meetings.meeting_data_download.dashboard') %>
            </div>
          </div>
        </div>
      <% end %>
    </td>
  <% end %>
</tr>

<%= content_for :render_async %>
